{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nvar _hoisted_1 = {\n  \"class\": \"rank\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createElementVNode(\"p\", null, \"Reaction time - \" + _toDisplayString($props.score), 1 /* TEXT */), _createElementVNode(\"p\", _hoisted_1, _toDisplayString($data.rank), 1 /* TEXT */)], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["_createElementBlock","_Fragment","_createElementVNode","_toDisplayString","$props","score","_hoisted_1","$data","rank"],"sources":["/Users/rubenweijers/Desktop/reaction-timer/src/components/Results.vue"],"sourcesContent":["<template>\n    <p>Reaction time - {{ score }}</p>\n    <p class=\"rank\">{{ rank }}</p>\n</template>\n\n\n<script>\nexport default {\n    props: ['score'],\n    data() {\n        return {\n            rank: null\n        }\n    },\n    mounted() {\n        if (this.score < 250) {\n            this.rank = 'Max Verstappen'\n        } else if (this.score < 400) {\n            this.rank = 'Medium'\n        } else {\n            this.rank = 'Zzz'\n        }\n    }\n\n}\n\n</script>\n\n\n<style>\n.rank {\n    font-size: 1.4em;\n    color: #eee;\n    font-weight: bold;\n}\n\n</style>"],"mappings":";;EAEO,SAAM;AAAM;;uBAFnBA,mBAAA,CAAAC,SAAA,SACIC,mBAAA,CAAkC,WAA/B,kBAAgB,GAAAC,gBAAA,CAAGC,MAAA,CAAAC,KAAK,kBAC3BH,mBAAA,CAA8B,KAA9BI,UAA8B,EAAAH,gBAAA,CAAXI,KAAA,CAAAC,IAAI,iB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}